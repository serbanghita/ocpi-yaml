openapi: 3.1.0
info:
  version: 0.0.1
  title: OCPI Tariffs
  contact:
    name: Serban Ghita
    email: serbanghita@gmail.com

  description: >
    This file contains the OCPI Tariffs models from https://github.com/ocpi/ocpi/blob/v2.2.1-d2/mod_tariffs.asciidoc

  license:
    url: https://github.com/serbanghita/ocpi-yaml/blob/main/LICENSE
    name: MIT

servers:
  - url: http://test.com/ocpi
    description: Your OCPI Server

components:
  schemas:
    DayOfWeek:
      type: string
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY

    EnergySourceCategory:
      type: string
      enum:
        - NUCLEAR
        - GENERAL_FOSSIL
        - COAL
        - GAS
        - GENERAL_GREEN
        - SOLAR
        - WIND
        - WATER
      description: See https://github.com/ocpi/ocpi/blob/v2.2.1-d2/mod_locations.asciidoc#148-energysourcecategory-enum

    EnergySource:
      properties:
        source:
          $ref: '#/components/schemas/EnergySourceCategory'
          required: true
        percentage:
          type: number
          required: true

    EnvironmentalImpactCategory:
      type: string
      enum:
        - NUCLEAR_WASTE
        - CARBON_DIOXIDE
      description: See https://github.com/ocpi/ocpi/blob/v2.2.1-d2/mod_locations.asciidoc#1410-environmentalimpactcategory-enum

    EnvironmentalImpact:
      properties:
        category:
          $ref: '#/components/schemas/EnvironmentalImpactCategory'
          required: true
        amount:
          type: number
          required: true

    EnergyMix:
      properties:
        is_green_energy:
          type: boolean
          required: true
          description: True if 100% from regenerative sources. (CO2 and nuclear waste is zero)
        energy_sources:
          type: array
          items:
            $ref: '#/components/schemas/EnergySource'
          description: Key-value pairs (enum + percentage) of energy sources of this location’s tariff.
          nullable: true
        environ_impact:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentalImpact'
          description: Key-value pairs (enum + percentage) of nuclear waste and CO2 exhaust of this location’s tariff.
        supplier_name:
          type: string
          maxLength: 64
          description: Name of the energy supplier, delivering the energy for this location or tariff.
        energy_product_name:
          type: string
          maxLength: 64
          description: Name of the energy suppliers product/tariff plan used at this location.

    TariffType:
      type: string
      enum:
        - AD_HOC_PAYMENT
        - PROFILE_CHEAP
        - PROFILE_FAST
        - PROFILE_GREEN
        - REGULAR
      description: >
        Defines the type of the tariff. This allows for distinction in case of given Charging Preferences. When omitted, this tariff is valid for all sessions.
        
        * `AD_HOC_PAYMENT` - Used to describe that a Tariff is valid when ad-hoc payment is used at the Charge Point (for example: Debit or Credit card payment terminal).
        * `PROFILE_CHEAP` - Used to describe that a Tariff is valid when Charging Preference: CHEAP is set for the session.
        * `PROFILE_FAST` - Used to describe that a Tariff is valid when Charging Preference: FAST is set for the session.
        * `PROFILE_GREEN` - Used to describe that a Tariff is valid when Charging Preference: GREEN is set for the session.
        * `REGULAR` - Used to describe that a Tariff is valid when using an RFID, without any Charging Preference, or when Charging Preference: REGULAR is set for the session.

    DisplayText:
      description: >
        List of multi-language alternative tariff info texts.
      properties:
        language:
          type: string
          required:
            - true
          maxLength: 2
          description: Language Code ISO 639-1.
        text:
          type: string
          required: true
          maxLength: 512
          description: Text to be displayed to a end user. No markup, html etc. allowed.

    Price:
      description: >
        See https://github.com/ocpi/ocpi/blob/v2.2.1-d2/types.asciidoc#15-price-class
      properties:
        excl_vat:
          type: number
          required: true
          description: Price/Cost excluding VAT.
        incl_vat:
          type: number
          description: Price/Cost including VAT.

    TariffDimensionType:
      type: string
      enum:
        - ENERGY
        - FLAT
        - PARKING_TIME
        - TIME
      description: >
        * `ENERGY` - Defined in kWh, `step_size` multiplier: 1 Wh
        * `FLAT` - Flat fee without unit for step_size
        * `PARKING_TIME` - Time not charging: defined in hours, `step_size` multiplier: 1 second
        * `TIME` - Time charging: defined in hours, `step_size` multiplier: 1 second
          Can also be used in combination with a RESERVATION restriction to describe the price of the reservation time.

    PriceComponent:
      properties:
        type:
          $ref: '#/components/schemas/TariffDimensionType'
          required: true
          description: The dimension that is being priced
        price:
          type: number
          required: true
          description: Price per unit (excl. VAT) for this dimension.
        vat:
          type: number
          description: >
            Applicable VAT percentage for this tariff dimension. If omitted, no VAT is applicable. 
            Not providing a VAT is different from 0% VAT, which would be a value of 0.0 here.
        step_size:
          type: number
          required: true
          description: >
            Minimum amount to be billed. That is, the dimension will be billed in this `step_size` blocks. 
            Consumed amounts are rounded up to the smallest multiple of `step_size` that is greater than the consumed amount. 
            For example: if `type` is `TIME` and `step_size` has a value of `300`, then time will be billed in blocks of 5 minutes. 
            If 6 minutes were consumed, 10 minutes (2 blocks of `step_size`) will be billed.

    ReservationRestrictionType:
      type: string
      enum:
        - RESERVATION
        - RESERVATION_EXPIRES
      description: >
        * `RESERVATION` - Used in Tariff Elements to describe costs for a reservation.
        * `RESERVATION_EXPIRES` - Used in Tariff Elements to describe costs for a reservation that expires 
        (i.e. driver does not start a charging session before expiry_date of the reservation).

    TariffRestrictions:
      description: >
        A `TariffRestrictions` object describes if and when a Tariff Element becomes active or inactive during a Charging Session.
      properties:
        start_time:
          type: string
          maxLength: 5
          description: >
            Start time of day in local time, the time zone is defined in the time_zone field of the Location, 
            for example 13:30, valid from this time of the day. Must be in 24h format with leading zeros. 
            Hour/Minute separator: ":" Regex: `([0-1][0-9]|2[0-3]):[0-5][0-9]`
        end_time:
          type: string
          maxLength: 5
          description: >
            End time of day in local time, the time zone is defined in the `time_zone` field of the Location, 
            for example 19:45, valid until this time of the day. Same syntax as `start_time`. If end_time < start_time 
            then the period wraps around to the next day. To stop at end of the day use: 00:00.
        start_date:
          type: string
          maxLength: 10
          description: >
            Start date in local time, the time zone is defined in the `time_zone` field of the Location, for example: 
            2015-12-24, valid from this day (inclusive). Regex: `([12][0-9]{3})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])`
        end_date:
          type: string
          maxLength: 10
          description: >
            End date in local time, the time zone is defined in the time_zone field of the Location, 
            for example: 2015-12-27, valid until this day (exclusive). Same syntax as `start_date`.
        min_kwh:
          type: number
          description: Minimum consumed energy in kWh, for example 20, valid from this amount of energy (inclusive) being used.
        max_kwh:
          type: number
          description: Maximum consumed energy in kWh, for example 50, valid until this amount of energy (exclusive) being used.
        min_current:
          type: number
          description: >
            Sum of the minimum current (in Amperes) over all phases, for example 5. 
            When the EV is charging with more than, or equal to, the defined amount of current, this TariffElement is/becomes active. 
            If the charging current is or becomes lower, this TariffElement is not or no longer valid and becomes inactive. 
            This describes NOT the minimum current over the entire Charging Session. This restriction can make a TariffElement 
            become active when the charging current is above the defined value, but the TariffElement MUST no longer be 
            active when the charging current drops below the defined value.
        max_current:
          type: number
          description: >
            Sum of the maximum current (in Amperes) over all phases, for example 20. When the EV is charging with less 
            than the defined amount of current, this TariffElement becomes/is active. If the charging current is or 
            becomes higher, this TariffElement is not or no longer valid and becomes inactive. This describes NOT the 
            maximum current over the entire Charging Session. This restriction can make a TariffElement become active 
            when the charging current is below this value, but the TariffElement MUST no longer be active when the 
            charging current raises above the defined value.
        min_power:
          type: number
          description: >
            Minimum power in kW, for example 5. When the EV is charging with more than, or equal to, the defined amount 
            of power, this TariffElement is/becomes active. If the charging power is or becomes lower, this TariffElement 
            is not or no longer valid and becomes inactive. This describes NOT the minimum power over the entire 
            Charging Session. This restriction can make a TariffElement become active when the charging power is above 
            this value, but the TariffElement MUST no longer be active when the charging power drops below the defined value.
        max_power:
          type: number
          description: >
            Maximum power in kW, for example 20. When the EV is charging with less than the defined amount of power, 
            this TariffElement becomes/is active. If the charging power is or becomes higher, this TariffElement is not 
            or no longer valid and becomes inactive. This describes NOT the maximum power over the entire Charging Session. 
            This restriction can make a TariffElement become active when the charging power is below this value, but the 
            TariffElement MUST no longer be active when the charging power raises above the defined value.
        min_duration:
          type: integer
        max_duration:
          type: integer
        day_of_week:
          type: array
          items:
            $ref: '#/components/schemas/DayOfWeek'
            description: Which day(s) of the week this TariffElement is active.
        reservation:
          $ref: '#/components/schemas/ReservationRestrictionType'
          description: >
            When this field is present, the TariffElement describes reservation costs. A reservation starts when the 
            reservation is made, and ends when the driver starts charging on the reserved EVSE/Location, or when the 
            reservation expires. A reservation can only have: FLAT and TIME TariffDimensions, where TIME is for the 
            duration of the reservation.

    TariffElement:
      description: >
        A Tariff Element is a group of Price Components that share a set of restrictions under which they apply.
      properties:
        price_components:
          $ref: '#/components/schemas/PriceComponent'
        restrictions:
          $ref: '#/components/schemas/TariffRestrictions'

    Tariff:
      description: >
        Tariff object consists of a list of one or more Tariff Elements, which in turn consist of Price Components.
      properties:
        country_code:
          type: string
          maxLength: 2
          required: true
          description: ISO-3166 alpha-2 country code of the CPO that owns this Tariff.
        party_id:
          type: string
          maxLength: 3
          required: true
          description: ID of the CPO that 'owns' this Tariff (following the ISO-15118 standard).
        id:
          type: string
          maxLength: 36
          required: true
          description: Uniquely identifies the tariff within the CPO’s platform (and suboperator platforms).
        currency:
          type: string
          maxLength: 3
          required: true
          description: ISO-4217 code of the currency of this tariff.
        type:
          $ref: '#/components/schemas/TariffType'
        tariff_alt_text:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/DisplayText'
        tariff_alt_url:
          type: string
          maxLength: 255
          description: URL to a web page that contains an explanation of the tariff information in human readable form.
        min_price:
          $ref: '#/components/schemas/Price'
          description: >
            A Charging Session with this tariff will at least cost this amount. 
            This is different from a FLAT fee (Start Tariff, Transaction Fee), as a FLAT fee is a fixed amount that 
            has to be paid for any Charging Session. A minimum price indicates that when the cost of a Charging Session 
            is lower than this amount, the cost of the Session will be equal to this amount.
        max_price:
          $ref: '#/components/schemas/Price'
          description: >
            A Charging Session with this tariff will NOT cost more than this amount.
        elements:
          type: array
          items:
            $ref: '#/components/schemas/TariffElement'
        start_date_time:
          type: string
          nullable: true
          description: >
            The time when this tariff becomes active, in UTC, time_zone field of the Location can be used to convert to 
            local time. Typically used for a new tariff that is already given with the location, before it becomes active.
        end_date_time:
          type: string
          nullable: true
          description: >
            The time after which this tariff is no longer valid, in UTC, time_zone field if the Location can be used to 
            convert to local time. Typically used when this tariff is going to be replaced with a different tariff 
            in the near future.
        energy_mix:
          $ref: '#/components/schemas/EnergyMix'
          nullable: true
          description: Details on the energy supplied with this tariff.
        last_updated:
          type: string
          required: true
          description: Timestamp when this Tariff was last updated (or created).




